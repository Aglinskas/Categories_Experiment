mt_fn_temp = '/Users/aidasaglinskas/Google Drive/Aidas/Categories_Experiment/fMRI_Data/S%d/S%.2i_P1_myTrials.mat';
mt_ofn_temp = '/Users/aidasaglinskas/Google Drive/Aidas/Categories_Experiment/fMRI_Data/S%d/S%.2i_P1_myTrials_fixed.mat';
load('subvec')

for subID = subvec;
mt_fn = sprintf(mt_fn_temp,subID,subID);
myTrials = [];
load(mt_fn);
%% Add Run inds.
[myTrials(1:216).fmri_run] = deal(1);
[myTrials(217:432).fmri_run] = deal(2);
%% Responses
[myTrials(cellfun(@(x) strcmp(x,'1!'),{myTrials.response})).response] = deal(1);
[myTrials(cellfun(@(x) strcmp(x,'2@'),{myTrials.response})).response] = deal(2);
[myTrials(cellfun(@(x) strcmp(x,'3#'),{myTrials.response})).response] = deal(3);
[myTrials(cellfun(@(x) strcmp(x,'4$'),{myTrials.response})).response] = deal(4);
[myTrials(cellfun(@(x) strcmp(x,'6^'),{myTrials.response})).response] = deal(3);
[myTrials(cellfun(@(x) strcmp(x,'7&'),{myTrials.response})).response] = deal(4);
%% Missing Data
[myTrials(cellfun(@(x) isempty(x),{myTrials.response})).response] = deal(NaN);
[myTrials(cellfun(@(x) isempty(x),{myTrials.RT})).RT] = deal(NaN);
%% Missing Runs for subs 1 2 3;
missing = [10.0666999405948;12.1000337822188;14.1333764213050;16.1667129021662;18.2001062732306;20.2334365958814;22.2667006443808;24.3001160090789;36.3835539832216;38.4168491160672;40.4502298774460;42.4835769152560;44.5169465331855;46.5502325753332;48.5836423682922;50.6169369146373;62.7003619858588;64.7337087304186;66.7671229221160;68.8004535380169;70.8338076137879;72.8672112485365;74.9005248560279;76.9338754128257;89.0175444667257;91.0506451758556;93.0839687537955;95.1173377852392;97.1507030044450;99.1840394853207;101.217414968225;103.250711860557;115.334160098399;117.367475465377;119.400887311087;121.434181270932;123.467596928866;125.500882677763;127.534271650089;129.567628365097;141.651337887291;143.684432731447;145.717731383265;147.751098361972;149.784382351369;151.817798595803;153.851108684321;155.884479768501;167.968013048376;170.001227537898;172.034645541833;174.068008415052;176.101409997078;178.134663488643;180.168053633970;182.201342608591;194.285088493576;196.318169848309;198.351513367146;200.384863630679;202.418189847856;204.451565917261;206.484887149214;208.518280813514;220.601711456460;222.635049990058;224.668415502514;226.701730869507;228.735108698398;230.768392394544;232.801824474402;234.835105531311;246.918836167388;248.951943914479;250.985322036620;253.018643268573;255.051959222052;257.085345555141;259.118638928499;261.152026727839;273.235428339176;275.268792092145;277.302139129955;279.335541884968;281.368903291950;283.402169393186;285.435569508962;287.468881356966;299.552607301070;301.585693641027;303.619072936155;305.652400619583;307.685774342986;309.719091469466;311.752400971469;313.785782905848;325.869170734513;327.902528036022;329.935857185672;331.969283987055;334.002642754800;336.035995364335;338.069320115261;340.102668032807;352.186372276527;354.219406125019;356.252801548821;358.286103719627;360.319498263678;362.352841196014;364.386198790759;366.419566355966;378.502971193040;380.536298876454;382.569640929039;384.603034886590;386.636359930766;388.669774708964;390.703035238490;392.736448550451;404.820107340653;406.853152332580;408.886607285822;410.919851979925;412.953265291886;414.986543709558;417.019945878070;419.053331624673;431.136712122127;433.170110771665;435.203461328449;437.236791357849;439.270107604578;441.303504201365;443.336798454460;445.370226135594;457.453931259050;459.487000004112;461.520309212865;463.553684989020;465.587023815882;467.620354725019;469.653723756463;471.687065515798;483.770482376058;485.803814164960;487.837206069773;489.870527594976;491.903955276095;493.937289704219;495.970588062803;498.003975862142;510.087628200883;512.120758821358;514.154076827574;516.187415067921;518.220795242814;520.254120873477;522.287461753076;524.320844567192;536.404277262860;538.437685296347;540.470970165494;542.504254741391;544.537711160854;546.570993097514;548.604361249221;550.637673390462;562.721418395711;564.754499457195;566.787892535009;568.821158343009;570.854546728850;572.887878517737;574.921246669430;576.954581684055;589.038001476802;591.071396607353;593.104684702223;595.138051974180;597.171473790339;599.204822001135;601.238145872325;603.271485872174;615.355173693970;617.388235694321;619.421635516846;621.454903377584;623.488326659979;625.521615634600;627.555027773560;629.588351937986;641.671767332009;643.705160996324;645.738446451956;647.771857711166;649.805159295473;651.838574660171;653.871843693894;655.905237358209;667.988948933140;670.022040258322;672.055393747593;674.088700023873;676.122049994170;678.155399964453;680.188791869281;682.222077031664;694.305519111294;696.338900459174;698.372257467432;700.405584271095;702.438975002922;704.472350485827;706.505618346564;708.539024620550];
missing = arrayfun(@(x) x,missing,'UniformOutput',0);
if ismember(subID,[1 2 3]);
    [myTrials(217:432).time_presented] = deal(missing{:});
end
%% Save
mt_ofn = sprintf(mt_ofn_temp,subID,subID);
save(mt_ofn,'myTrials');
end